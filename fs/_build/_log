### Starting build.
# Target: minifs6.0_withTypeChecker.ml.depends, tags: { extension:ml, file:minifs6.0_withTypeChecker.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules minifs6.0_withTypeChecker.ml > minifs6.0_withTypeChecker.ml.depends
# Target: minifs6.0_withTypeChecker.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:minifs6.0_withTypeChecker.cmo, file:minifs6.0_withTypeChecker.ml, implem, ocaml, quiet }
ocamlc.opt -c -o minifs6.0_withTypeChecker.cmo minifs6.0_withTypeChecker.ml
+ ocamlc.opt -c -o minifs6.0_withTypeChecker.cmo minifs6.0_withTypeChecker.ml
File "minifs6.0_withTypeChecker.ml", line 273, characters 6-45:
273 |       if te == tx then te else compType te tx; TBool
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
File "minifs6.0_withTypeChecker.ml", line 278, characters 6-45:
278 |       if te == tx then te else compType te tx; TBool
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
File "minifs6.0_withTypeChecker.ml", line 366, characters 151-196:
366 |       | TmPlus(x,y) | TmMinus(x,y) | TmMult(x,y) | TmDiv(x,y)-> Format.eprintf "(Op Arit) @."; ignore(typecheck (whites + 2) gamma ct (Some TNat) x) ; typecheck (whites + 2) gamma ct (Some TNat) y ; compType TNat ty
                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
# Target: minifs6.cmx, tags: { compile, extension:cmx, extension:ml, file:minifs6.0_withTypeChecker.ml, file:minifs6.cmx, implem, native, ocaml, quiet }
ocamlopt.opt -c -o minifs6.cmx minifs6.0_withTypeChecker.ml
+ ocamlopt.opt -c -o minifs6.cmx minifs6.0_withTypeChecker.ml
File "minifs6.0_withTypeChecker.ml", line 273, characters 6-45:
273 |       if te == tx then te else compType te tx; TBool
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
File "minifs6.0_withTypeChecker.ml", line 278, characters 6-45:
278 |       if te == tx then te else compType te tx; TBool
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
File "minifs6.0_withTypeChecker.ml", line 366, characters 151-196:
366 |       | TmPlus(x,y) | TmMinus(x,y) | TmMult(x,y) | TmDiv(x,y)-> Format.eprintf "(Op Arit) @."; ignore(typecheck (whites + 2) gamma ct (Some TNat) x) ; typecheck (whites + 2) gamma ct (Some TNat) y ; compType TNat ty
                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10 [non-unit-statement]: this expression should have type unit.
# Compilation unsuccessful.
